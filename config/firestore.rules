rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin/manager
    function isManager() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }
    
    // Users collection - users can only access their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow managers to read employee profiles for management purposes
      allow read: if isManager();
      
      // Allow managers to create/update employee profiles
      allow write: if isManager();
    }
    
    // Collections that need to be accessible for cleanup operations
    // Allow full access to collections that may need to be deleted
    match /employees/{employeeId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /departments/{departmentId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /reports/{reportId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /dates/{dateId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /leaveSettings/{settingId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /employeeLeaveBalances/{balanceId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /courses/{courseId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /documents/{documentId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /expenses/{expenseId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /learningProgress/{progressId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /messages/{messageId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /performanceMetrics/{metricId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    match /teamMembers/{memberId} {
      allow read, write, delete: if true; // Allow cleanup operations
    }
    
    // Work tickets collection
    match /workTickets/{ticketId} {
      // All authenticated users can read tickets (for reporting)
      allow read: if request.auth != null;
      
      // Employees can create and update their own tickets
      allow create, update: if request.auth != null && 
        request.resource.data.employeeId == request.auth.uid;
      
      // Managers can read/write all tickets
      allow read, write: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Time entries collection
    match /timeEntries/{entryId} {
      // Employees can read/write their own time entries
      allow read, write: if request.auth != null && 
        resource.data.employeeId == request.auth.uid;
      
      // Allow creation of new time entries by the employee
      allow create: if request.auth != null && 
        request.resource.data.employeeId == request.auth.uid;
      
      // Managers can read/write all time entries
      allow read, write: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Payroll entries collection
    match /payrollEntries/{entryId} {
      // Only managers can access payroll data (sensitive financial information)
      allow read, write: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Personal goals collection
    match /goals/{goalId} {
      // Users can only access their own goals
      allow read, write: if request.auth != null && 
        resource.data.employee_id == request.auth.uid;
      
      // Allow creation of new goals
      allow create: if request.auth != null && 
        request.resource.data.employee_id == request.auth.uid;
      
      // Managers can read employee goals for performance review
      allow read: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Users can only access their own notifications
      allow read, write: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      
      // Allow creation of new notifications
      allow create: if request.auth != null;
      
      // Managers can create notifications for employees
      allow create: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Settings collection - consolidated settings
    match /settings/{settingId} {
      // Managers can read/write settings
      allow read, write: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
    
    // Leave requests collection - consolidated leave management
    match /leaveRequests/{requestId} {
      // Employees can read/write their own leave requests
      allow read, write: if request.auth != null && 
        resource.data.employeeId == request.auth.uid;
      
      // Allow creation of new leave requests
      allow create: if request.auth != null && 
        request.resource.data.employeeId == request.auth.uid;
      
      // Managers can read/write all leave requests
      allow read, write: if isManager();
      
      // Allow cleanup operations
      allow delete: if true;
    }
  }
}
